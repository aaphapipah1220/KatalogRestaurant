{"version":3,"file":"app~a51fa3f5.bundle.js","mappings":";0YACA,svNAIA,IAAQA,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IA2BF,QAxB8B,CACtBC,YAAW,SAACC,GAAI,oGACfA,EAAI,CAAF,gEAGOP,EAAS,uCAAEQ,IAAIT,EAAmBQ,IAAE,0CAJ9B,EAKtB,EAEME,eAAc,WAAG,iHACPT,EAAS,uCAAEU,OAAOX,IAAiB,0CAD5B,EAEvB,EAEMY,YAAW,SAACC,GAAY,oGACvBA,EAAWC,eAAe,MAAO,CAAF,gEAGtBb,EAAS,uCAAEc,IAAIf,EAAmBa,IAAU,0CAJ9B,EAK9B,EAEMG,eAAc,SAACR,GAAI,iHACTP,EAAS,8CAASD,EAAmBQ,IAAE,0CAD9B,EAEzB,gDC1BF,QALqB,CACnBS,gBAAiB,GAAF,OAAKnB,EAAAA,EAAAA,SAAe,QACnCoB,OAAQ,SAACV,GAAE,gBAAQV,EAAAA,EAAAA,SAAe,kBAAUU,EAAE,sPCJhD,45NAqBA,QApB2B,yBAD3B,4FAC2B,SAD3B,QAYG,EANA,EALwB,EAiBxB,OAlBH,EAC2B,OAD3B,EAC2B,4CACzB,sGACyBW,MAAMC,EAAAA,iBAA6B,OAA5C,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,4FAED,sGACyBL,MAAMC,EAAAA,UAAsB,OAArC,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,0FAED,WAA8BhB,GAAE,yFACPW,MAAMC,EAAAA,OAAoBZ,IAAI,OAAvC,OAARa,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaV,YAAU,2CAC/B,+CAlBH,6DAkBG,EAjBwB,mCCU3B,QAZe,CACbY,SAAU,uCACVC,kBAAmB,oDACnBC,kBAAmB,qDACnBC,kBAAmB,oDACnBC,iBAAkB,QAClBC,YAAY,IAAIC,MAAOC,cACvBnC,cAAe,gCACfE,iBAAkB,EAClBC,kBAAmB,qFCKfiC,gBAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,cAC/BC,OAAQF,SAASC,cAAc,WAC/BE,QAASH,SAASC,cAAc,WAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACN,IAEAF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,IACF","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-restaurant-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/therestaurantdb-source.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["/* eslint-disable consistent-return */\r\n/* eslint-disable no-prototype-builtins */\r\nimport { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteRestaurantIdb = {\r\n  async getFavorite(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n\r\n  async getAllFavorite() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n\r\n  async putFavorite(restaurant) {\r\n    if (!restaurant.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n  },\r\n\r\n  async deleteFavorite(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n};\r\n\r\nexport default FavoriteRestaurantIdb;\r\n","/* eslint-disable max-len */\r\nimport CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  LIST_RESTAURANT: `${CONFIG.BASE_URL}list`,\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","import API_ENDPOINT from '../globals/api-endpoint';\r\n\r\nclass TheRestaurantDbSource {\r\n  static async homeRestaurant() {\r\n    const response = await fetch(API_ENDPOINT.LIST_RESTAURANT);\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurants;\r\n  }\r\n\r\n  static async favoriteRestaurant() {\r\n    const response = await fetch(API_ENDPOINT.FAVORITE);\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurants;\r\n  }\r\n\r\n  static async detailRestaurant(id) {\r\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurant;\r\n  }\r\n}\r\n\r\nexport default TheRestaurantDbSource;\r\n","const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL_SM: 'https://restaurant-api.dicoding.dev/images/small/',\r\n  BASE_IMAGE_URL_MD: 'https://restaurant-api.dicoding.dev/images/medium/',\r\n  BASE_IMAGE_URL_LG: 'https://restaurant-api.dicoding.dev/images/large/',\r\n  DEFAULT_LANGUAGE: 'en-us',\r\n  CACHE_NAME: new Date().toISOString(),\r\n  DATABASE_NAME: 'restaurant-catalogue-database',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restaurants',\r\n};\r\n\r\nexport default CONFIG;\r\n","import 'regenerator-runtime';\n\nimport '../styles/main.css';\nimport '../styles/responsive.css';\nimport '../styles/drawer.css';\nimport '../styles/detail.css';\n\nimport App from './views/app';\n\nimport swRegister from './utils/swRegister';\n\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\n\nconst app = new App({\n  button: document.querySelector('#hamburger'),\n  drawer: document.querySelector('#drawer'),\n  content: document.querySelector('main'),\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n\nwindow.addEventListener('load', () => {\n  app.renderPage();\n  swRegister();\n});\n"],"names":["DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getFavorite","id","get","getAllFavorite","getAll","putFavorite","restaurant","hasOwnProperty","put","deleteFavorite","LIST_RESTAURANT","DETAIL","fetch","API_ENDPOINT","response","json","responseJson","restaurants","BASE_URL","BASE_IMAGE_URL_SM","BASE_IMAGE_URL_MD","BASE_IMAGE_URL_LG","DEFAULT_LANGUAGE","CACHE_NAME","Date","toISOString","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}